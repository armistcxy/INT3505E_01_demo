openapi: 3.0.3
info:
  title: Movie API
  version: 1.0.0
servers:
  - url: http://localhost:8080

paths:
  /movies:
    get:
      summary: Get all movies
      responses:
        "200":
          description: A list of movies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movie"
    post:
      summary: Add a new movie
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Movie"
      responses:
        "201":
          description: Movie created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
          links:
            GetMovieById:
              operationId: getMovieById
              parameters:
                id: "$response.body#/id"
              description: >
                Use the returned movie ID to get details with GET /movies/{id}

  /movies/{id}:
    get:
      summary: Get a movie by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Movie details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
        "404":
          description: Movie not found
    put:
      summary: Update movie details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Movie"
      responses:
        "200":
          description: Movie updated
        "404":
          description: Movie not found
    delete:
      summary: Delete a movie by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Movie deleted successfully
        "404":
          description: Movie not found

components:
  schemas:
    Movie:
      type: object
      required: [title, year]
      properties:
        id:
          type: string
          example: "1"
        title:
          type: string
          example: "Inception"
        description:
          type: string
          example: "A thief who steals corporate secrets through dream-sharing technology."
        year:
          type: integer
          example: 2010
        genre:
          type: string
          example: "Sci-Fi"